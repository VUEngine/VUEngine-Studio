{%- set sanitizedSpecName = item.name | sanitizeSpecName -%}
{%- set imageData = itemUri | convertImage(item) -%}

{%- set mapsDataTotalLength = 0 -%}
{%- for map in imageData.maps -%}
    {%- set mapsDataTotalLength = mapsDataTotalLength + map.data.length -%}
{%- endfor -%}

{%- set reducedTilesLabel = 'unreduced' -%}
{%- if item.map.reduce.flipped is defined and item.map.reduce.unique is defined -%}
    {%- if item.map.reduce.flipped and item.map.reduce.unique -%}
        {%- set reducedTilesLabel = 'reduced by non-unique and flipped tiles' -%}
    {%- elseif item.map.reduce.flipped -%}
        {%- set reducedTilesLabel = 'reduced by flipped tiles' -%}
    {%- elseif item.map.reduce.unique -%}
        {%- set reducedTilesLabel = 'reduced by non-unique tiles' -%}
    {%- endif -%}
{%- endif -%}

{%- set tilesCompressionLabel = 'not compressed' -%}
{%- if item.tileset.compression != 'none' and imageData.tiles.compressionRatio is defined -%}
    {%- if imageData.tiles.compressionRatio < 0 -%}
        {%- set tilesCompressionLabel = item.tileset.compression | upper ~ ' compressed (' ~ imageData.tiles.compressionRatio | round(2) ~ '%)' -%}
    {%- elseif imageData.tiles.compressionRatio == 0 -%}
        {%- set tilesCompressionLabel = item.tileset.compression | upper ~ ' compression skipped for not reducing size (Â±' ~ imageData.tiles.compressionRatio | round(2) ~ '%)' -%}
    {%- else -%}
        {%- set tilesCompressionLabel = item.tileset.compression | upper ~ ' compression skipped for inflating size (+' ~ imageData.tiles.compressionRatio | round(2) ~ '%)' -%}
    {%- endif -%}
{%- endif -%}

//---------------------------------------------------------------------------------------------------------
//
//  {{ sanitizedSpecName }}
{% if imageData.maps.length -%}
    //  * {{ imageData.maps[0].width * 8 }}x{{ imageData.maps[0].height * 8 }} pixels
{% else -%}
    //  * {{ imageData.tiles.width }}x{{ imageData.tiles.height }} pixels
{% endif %}

{%- if imageData.tiles.data.length -%}
    //  * {{ imageData.tiles.count }} tiles, {{ reducedTilesLabel }}, {{ tilesCompressionLabel }}
{% endif %}

{%- for map in imageData.maps -%}
    //  * {{ map.width }}x{{ map.height }} map, not compressed
{% endfor -%}

{%- if item.animation.isAnimation and imageData.tiles.count > 0 -%}
    //  * {{ imageData.animation.frames }} animation frames, {% if item.animation.individualFiles %}individual files{% else %}spritesheet{% endif %}{% if item.animation.individualFiles and imageData.animation.largestFrame is defined %}, largest frame: {{imageData.animation.largestFrame}} tiles{% endif %}
{% endif -%}

{%- if imageData.tiles.data.length and imageData.maps.length -%}
    //  Size: {{ (imageData.tiles.data.length + 1) * 4 }}
    {%- for map in imageData.maps -%}
        {{ ' + ' }}{{ map.data.length * 2 }}{{ ' ' }}
    {%- endfor -%}
    = {{ ((imageData.tiles.data.length + 1) * 4) + (mapsDataTotalLength * 2) }}
{% elseif imageData.tiles.data.length -%}
    //  Size: {{ (imageData.tiles.data.length + 1) * 4 }}
{% elseif imageData.maps.length -%}
    //  Size: {{ mapsDataTotalLength * 2 }}
{% endif -%}
//
//---------------------------------------------------------------------------------------------------------
{% if imageData.tiles.data.length %}
const uint32 {{ sanitizedSpecName }}Tiles[{{ (imageData.tiles.data.length + 1) }}] __attribute__((aligned(4))){% if item.section == 'exp' %} __attribute((section(".expdata"))){% endif %} =
{
    {# prepend tile data with a custom compression algorithm flag -#}
    {%- if item.tileset.compression is defined and item.tileset.compression != 'none' and imageData.tiles.compressionRatio < 0 -%}
        0x00000001,
    {%- else -%}
        0x00000000,
    {%- endif %}
    {% for tileData in imageData.tiles.data -%}
    0x{{ tileData }},
    {%- if loop.index % 8 == 0 and not loop.last %}{{ "\n    " }}{% endif -%}
    {%- endfor %}
};
{% endif %}

{%- for map in imageData.maps -%}
{% if map.data.length %}
const uint16 {{ sanitizedSpecName }}Map[{{ map.data.length }}] __attribute__((aligned(4))){% if item.section == 'exp' %} __attribute((section(".expdata"))){% endif %} =
{
    {% for mapTile in map.data -%}
    0x{{ mapTile }},
    {%- if loop.index % 8 == 0 and not loop.last %}{{ "\n    " }}{% endif -%}
    {%- endfor %}
};
{% endif %}
{%- endfor -%}

{% if imageData.tiles.frameOffsets is defined and imageData.tiles.frameOffsets.length %}
const uint32 {{ sanitizedSpecName }}TilesFrameOffsets[{{ imageData.tiles.frameOffsets.length }}] __attribute__((aligned(4))){% if item.section == 'exp' %} __attribute((section(".expdata"))){% endif %} =
{
    {% for frameTileOffset in imageData.tiles.frameOffsets -%}
    {{ frameTileOffset | intToHex(8) }},
    {%- if loop.index % 8 == 0 and not loop.last %}{{ "\n    " }}{% endif -%}
    {%- endfor %}
};
{% endif %}