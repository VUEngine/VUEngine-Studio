//======================================================================
//
//	{{ name }}
//  Stacked tiles and map
// 	• Number of frames: {{ numberOfFrames }}
// 	• Chars per frame:  {{ largestFrame / 4 }}
//  Total size: {{ numberOfFrames * largestFrame * 4 }} + {{ numberOfFrames * frames[0].maps.length * 2 }} = {{ (numberOfFrames * largestFrame * 4) + (numberOfFrames * frames[0].maps.length * 2) }}
//
//======================================================================

const uint32 {{ name }}Tiles[{{ numberOfFrames * largestFrame }}] __attribute__((aligned(4))){% if section == 'exp' %} __attribute((section(".expdata"))){% endif %}=
{
    {%- for frame in frames %}
    // ({{loop.index}}/{{ numberOfFrames }}) {{ frame.filename }}

    {% for tile in frame.tiles -%}
    {{ tile }}
    {%- if loop.index % 8 == 0 and not loop.last %}{{ "\n    " }}{% endif -%}
    {%- if loop.index % 64 == 0 and not loop.last %}{{ "\n    " }}{% endif -%}
    {%- endfor %}
    {% endfor %}
};

const uint16 {{ name }}Map[{{ numberOfFrames * frames[0].maps.length }}] __attribute__((aligned(4))){% if section == 'exp' %} __attribute((section(".expdata"))){% endif %}=
{
    {%- for frame in frames %}
    // ({{loop.index}}/{{ numberOfFrames }}) {{ frame.filename }}

    {% for map in frame.maps -%}
    {{ map }}
    {%- if loop.index % 8 == 0 and not loop.last %}{{ "\n    " }}{% endif -%}
    {%- if loop.index % 64 == 0 and not loop.last %}{{ "\n    " }}{% endif -%}
    {%- endfor %}
    {% endfor %}
};