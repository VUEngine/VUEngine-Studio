appId: dev.vuengine.studio
productName: VUEngine
copyright: Copyright Â© 2006-2023 VUEngine
electronDist: ../../node_modules/electron/dist
electronVersion: 23.3.13
# Although it is generally not recommended to disable asar, it is required for Theia.
# Enabling this leads to: process ERROR Error: spawn ENOTDIR
# because binaries can not be executed from the asar archive.
# See asar file API limitations: https://www.electronjs.org/docs/tutorial/application-packaging#limitations-of-the-node-api
asar: false
nodeGypRebuild: false
npmRebuild: false

directories:
  buildResources: resources

# node_modules and package.json are copied automatically
# Exclude node_modules manually because electron is copied by electron-builder and we are using a bundled backend
files:
  - src-gen
  - lib
  - scripts
  - "!**node_modules/**"
  - from: binaries/vuengine-studio-tools/web
    to: binaries/vuengine-studio-tools/web
  - from: documentation
    to: documentation
  - from: templates
    to: templates
  - from: vuengine
    to: vuengine
extraResources:
  - from: ../../plugins
    to: app/plugins

fileAssociations:
  - ext: vuengine
    name: VUEngine Studio Project
    description: VUEngine Studio project file
    role: Editor
    rank: Owner
    isPackage: false
  - ext: vb
    name: Virtual Boy ROM
    description: ROM image of Virtual Boy program
    role: Viewer
    rank: Default
    isPackage: false

win:
  icon: resources/icons/WindowsLauncherIcon/VUEngineStudio.ico
  artifactName: VUEngine-Studio-${versionDashes}-Windows.${ext}
  target:
    - nsis
  extraResources:
    - from: binaries/vuengine-studio-tools/win
      to: app/binaries/vuengine-studio-tools/win
    - from: binaries/vuengine-studio-tools/linux/gcc
      to: app/binaries/vuengine-studio-tools/linux/gcc

mac:
  #executableName: VUEngine
  artifactName: VUEngine-Studio-${versionDashes}-Mac.${ext}
  icon: resources/icons/MacLauncherIcon/512-512.icns
  category: public.app-category.developer-tools
  darkModeSupport: true
  target:
    - pkg
  extraResources:
    - from: binaries/vuengine-studio-tools/osx
      to: app/binaries/vuengine-studio-tools/osx

linux:
  icon: resources/icons/MacLauncherIcon/512-512.icns
  artifactName: VUEngine-Studio-${versionDashes}-Linux.${ext}
  category: Development
  vendor: VUEngine
  maintainer: VUEngine
  target:
    - deb
  extraResources:
    - from: binaries/vuengine-studio-tools/linux
      to: app/binaries/vuengine-studio-tools/linux

nsis:
  include: windows-installer.nsh
  menuCategory: false
  createDesktopShortcut: true
  createStartMenuShortcut: true
  oneClick: true
  perMachine: true
  allowToChangeInstallationDirectory: false
  runAfterFinish: true
  installerHeaderIcon: resources/icons/WindowsLauncherIcon/VUEngineStudio.ico
  installerIcon: resources/icons/WindowsLauncherIcon/VUEngineStudio.ico
  uninstallerIcon: resources/icons/WindowsLauncherIcon/VUEngineStudio.ico
  installerSidebar: resources/icons/InstallerSidebarImage/164-314Windows.bmp
  uninstallerSidebar: resources/icons/InstallerSidebarImage/164-314Windows.bmp
  artifactName: VUEngine-Studio-${versionDashes}-Setup-Windows.${ext}
  uninstallDisplayName: VUEngine Studio
pkg:
  artifactName: VUEngine-Studio-${versionDashes}-Setup-Mac.${ext}
  installLocation: /Applications
  allowAnywhere: false
  allowCurrentUserHome: false
  allowRootDirectory: true
  isVersionChecked: true
  isRelocatable: false
  overwriteAction: upgrade
  background:
    file: resources/icons/MacPkgBackground.png
    alignment: bottomleft
    scaling: proportional
deb:
  artifactName: VUEngine-Studio-${versionDashes}-Setup-Linux.${ext}

beforePack: ./scripts/before-pack.js
afterPack: ./scripts/after-pack.js
